name: CI
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  workflow_dispatch:

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the code
        uses: actions/checkout@v3

      - name: Run lint Dummy
        run: echo run lint

#      - name: Run Lint
#        run: ./gradlew lintDebug
#
#      - name: Upload html test report
#        uses: actions/upload-artifact@v3
#        with:
#          name: lint.html
#          path: app/build/reports/lint-results-debug.html

  unit-test:
    needs: [lint]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the code
        uses: actions/checkout@v3

      - name: Run unit test Dummy
        run: echo run unit test

#      - name: Run tests
#        run: ./gradlew test
#
#      - name: Upload test report
#        uses: actions/upload-artifact@v3
#        with:
#          name: unit_test_report
#          path: app/build/reports/tests/testDebugUnitTest/

  instrumentation-test:
    needs: [unit-test]
    runs-on: macos-latest
    steps:
      - name: Checkout the code
        uses: actions/checkout@v3

      - name: Run instrument test Dummy
        run: echo run instrument test

#      - name: Setup gradle for jdk 11
#        uses: actions/setup-java@v3
#        with:
#          distribution: 'corretto'
#          java-version: |
#            8
#            11
#          cache: 'gradle'
#      - name: Run espresso tests
#        uses: reactivecircus/android-emulator-runner@v2
#        with:
#          api-level: 29
#          script: ./gradlew connectedCheck
#
#      - name: Upload test report
#        uses: actions/upload-artifact@v3
#        with:
#          name: instrumentation test report
#          path: app/build/reports/androidTests/connected/

  static-code-analysis:
    needs: [instrumentation-test]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the code
        uses: actions/checkout@v3

      - name: Run sonar scanner Dummy
        run: echo run sonar scanner

#      - name: SonarCloud Scan
#        run: ./gradlew app:sonarqube -Dsonar.login=${{ secrets.SONAR_TOKEN }}
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  package:
    needs: [static-code-analysis]
    name: Generate APK
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the code
        uses: actions/checkout@v3

      - name: Setup JDK 1.8
        uses: actions/setup-java@v3
        with:
          java-version: 1.8

      - name: Build debug APK
        run: ./gradlew assembleDebug --stacktrace

      - name: Upload APK
        uses: actions/upload-artifact@v3
        with:
          name: hello-world-compose.apk
          path: app/build/outputs/apk/debug/app-debug.apk
